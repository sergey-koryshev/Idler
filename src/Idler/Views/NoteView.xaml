<UserControl x:Class="Idler.Views.NoteView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:Idler.Models"
             xmlns:views="clr-namespace:Idler.Views"
             xmlns:converters="clr-namespace:Idler.Converters"
             xmlns:dragAndDrop="clr-namespace:Idler.Helpers.DragAndDrop"
             xmlns:helpers="clr-namespace:Idler.Helpers"
             xmlns:components="clr-namespace:Idler.Components"
             mc:Ignorable="d">
    <UserControl.Resources>
        <TextBlock x:Key="OpenHandCursorWrapper"
                   Cursor="/Idler;component/Resources/open-hand-cursor.cur" />
        <CollectionViewSource x:Key="NoteCategoriesList"
                              Source="{Binding DataContext.Categories, RelativeSource={RelativeSource AncestorType=views:ListNotesView}}" />
        <converters:DoubleConverter x:Key="DoubleConverter" />
        <Style x:Key="BlurredTextBox"
               TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style TargetType="{x:Type ScrollViewer}">
                    <Setter Property="ContentPresenter.Effect"
                            Value="{x:Null}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.AreNotesBlurred, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:ListNotesView}}"
                                           Value="True" />
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=TextBox}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="ContentPresenter.Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="10" />
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="BlurredTextBlock"
               TargetType="TextBlock">
            <Setter Property="ContentPresenter.Effect"
                    Value="{x:Null}" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DataContext.AreNotesBlurred, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=views:ListNotesView}}"
                                   Value="True" />
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                   Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="ContentPresenter.Effect">
                            <Setter.Value>
                                <BlurEffect Radius="10" />
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BlurredDescriptionTextBox"
               BasedOn="{StaticResource BlurredTextBox}"
               TargetType="TextBox">
            <Setter Property="Padding"
                    Value="3 0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ChangeType}"
                             Value="{x:Static models:NoteChangeType.SortOrderChanged}">
                    <Setter Property="Padding"
                            Value="3 0 18 0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ChangeType}"
                             Value="{x:Static models:NoteChangeType.Created}">
                    <Setter Property="Padding"
                            Value="3 0 18 0" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ChangeType}"
                             Value="{x:Static models:NoteChangeType.Modified}">
                    <Setter Property="Padding"
                            Value="3 0 18 0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding DataContext.CategoryColumnWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=views:ListNotesView}}" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="{Binding DataContext.EffortColumnWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=views:ListNotesView}}" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <DockPanel LastChildFill="True"
                   Grid.Column="0">
            <ContentControl Height="12"
                            Margin="0 4 4 4"
                            Tag="{x:Static dragAndDrop:ListViewDragAndDrop.DragSourceLabel}"
                            Cursor="{Binding Cursor, Source={StaticResource OpenHandCursorWrapper}}">
                <Image Source="{StaticResource DragAndDropIcon}"
                       Tag="{x:Static dragAndDrop:ListViewDragAndDrop.DragSourceLabel}" />
            </ContentControl>
            <ComboBox ItemsSource="{Binding Source={StaticResource NoteCategoriesList}}"
                      SelectedValue="{Binding Path=CategoryId}"
                      SelectedValuePath="Id"
                      VerticalContentAlignment="Center"
                      IsSynchronizedWithCurrentItem="False"
                      ToolTip="{Binding Path=SelectedItem.Name, RelativeSource={RelativeSource Self}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"
                                   TextTrimming="CharacterEllipsis"
                                   Style="{StaticResource BlurredTextBlock}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </DockPanel>
        <GridSplitter Grid.Column="1"
                      ResizeDirection="Columns"
                      HorizontalAlignment="Center"
                      Background="Transparent"
                      Focusable="False"
                      Width="2" />
        <components:TextBox Grid.Column="2"
                 Text="{Binding Path=Effort, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleConverter}}"
                 Padding="3"
                 HorizontalContentAlignment="Center"
                 Style="{StaticResource BlurredTextBox}"/>
        <GridSplitter Grid.Column="3"
                      ResizeDirection="Columns"
                      HorizontalAlignment="Center"
                      Background="Transparent"
                      Focusable="False"
                      Width="2" />
        <Grid Grid.Column="4">
            <ContentControl Height="10"
                            Margin="0 0 5 0"
                            Panel.ZIndex="1"
                            HorizontalAlignment="Right">
                <ContentControl.Content>
                    <Image>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source"
                                        Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ChangeType}"
                                                 Value="{x:Static models:NoteChangeType.SortOrderChanged}">
                                        <Setter Property="Source"
                                                Value="{StaticResource OrderChangedIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ChangeType}"
                                                 Value="{x:Static models:NoteChangeType.Created}">
                                        <Setter Property="Source"
                                                Value="{StaticResource NewNoteIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ChangeType}"
                                                 Value="{x:Static models:NoteChangeType.Modified}">
                                        <Setter Property="Source"
                                                Value="{StaticResource ModifiedNoteIcon}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ContentControl.Content>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Changed}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
            <components:TextBox Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BlurredDescriptionTextBox}"
                     VerticalContentAlignment="Center"
                     helpers:Spellcheck.IsEnabledOnFocus="true"
                     helpers:Spellcheck.ErrorsCount="{Binding Path=ErrorsCount, Mode=OneWayToSource}">
            </components:TextBox>
        </Grid>
        <Grid Grid.Column="5">
            <Button Width="21"
                    Margin="2 0 0 0"
                    Command="{Binding RemoveNoteCommand}">
                <Button.Content>
                    <StackPanel>
                        <Path Stretch="Uniform">
                            <Path.Data>
                                <PathGeometry Figures="M12 4c-4.419 0-8 3.582-8 8s3.581 8 8 8s8-3.582 8-8S16.419 4 12 4z M15.707 14.293c0.391 0.391 0.391 1.023 0 1.414  C15.512 15.902 15.256 16 15 16s-0.512-0.098-0.707-0.293L12 13.414l-2.293 2.293C9.512 15.902 9.256 16 9 16  s-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023 0-1.414L10.586 12L8.293 9.707c-0.391-0.391-0.391-1.023 0-1.414  s1.023-0.391 1.414 0L12 10.586l2.293-2.293c0.391-0.391 1.023-0.391 1.414 0s0.391 1.023 0 1.414L13.414 12L15.707 14.293z" />
                            </Path.Data>
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Setters>
                                        <Setter Property="Fill"
                                                Value="PaleVioletRed" />
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}"
                                                     Value="True">
                                            <Setter Property="Fill"
                                                    Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </StackPanel>
                </Button.Content>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Cursor"
                                Value="Hand" />
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="border"
                                            BorderThickness="0"
                                            BorderBrush="Black"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center"
                                                          VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
</UserControl>
