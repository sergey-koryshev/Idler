name: Create Version Label

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs: 
  create_label:
    runs-on: windows-latest
    name: Create Version Label
    steps: 
      - uses: actions/checkout@v2
        name: Checkout repository
        with:
          token: ${{ secrets.REPO_PAT }}
      - name: Set New Version
        shell: pwsh
        run: |
          $incrementMajor = $false;
          $incrementMinor = $false;
          $incrementBuildNumber = $false;
          $incrementRevision = $true;
          $splitRepositoryName = "${{ github.repository }}" -split "/"
          if ($splitRepositoryName.Length -ne 2) {
            throw "Repository name can't be parsed: ${{ github.repository }}"
          }
          $pullRequestId = ./build/scripts/Get-PullRequests.ps1 -SHA "${{ github.sha }}" -Owner $splitRepositoryName[0] -Repository $splitRepositoryName[1] | Select-Object -first 1
          if ($pullRequestId) {
            $labels = .\build\scripts\Get-Labels.ps1 -PullRequestId $pullRequestId -Owner $splitRepositoryName[0] -Repository $splitRepositoryName[1]
            if ($labels -contains "breaking changes") {
              $incrementMajor = $true;
              $incrementMinor = $false;
              $incrementBuildNumber = $false;
              $incrementRevision = $true;
            }
            if ($labels -contains "enhancement") {
              $incrementMajor = $false;
              $incrementMinor = $true;
              $incrementBuildNumber = $false;
              $incrementRevision = $true;
            }
            if ($labels -contains "bug") {
              $incrementMajor = $false;
              $incrementMinor = $false;
              $incrementBuildNumber = $true;
              $incrementRevision = $true;
            }
            if ($labels -contains "misc") {
              $incrementMajor = $false;
              $incrementMinor = $false;
              $incrementBuildNumber = $false;
              $incrementRevision = $true;
            }
          }
          $newVersion = .\build\scripts\Set-Version.ps1 -AssemblyInfoPath .\src\Idler\Properties\AssemblyInfo.cs -VersionType AssemblyFileVersion -IncrementMajor:$incrementMajor -IncrementMinor:$incrementMinor -IncrementBuildNumber:$incrementBuildNumber -IncrementRevision:$incrementRevision
          .\build\scripts\Set-Version.ps1 -AssemblyInfoPath .\src\Idler\Properties\AssemblyInfo.cs -VersionType AssemblyInformationalVersion -IncrementMajor:$incrementMajor -IncrementMinor:$incrementMinor -IncrementBuildNumber:$incrementBuildNumber -IncrementRevision:$incrementRevision | Out-Null
          "new-version=$newVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Submit New Version
        run: |
          git config --global user.name "$env:GITHUB_ACTOR"
          git config --global user.email "$env:GITHUB_ACTOR@users.noreply.github.com"
          git commit -am "[automated] Bumped version to ${{ env.new-version }} [skip ci]"
          git tag v${{ env.new-version }}
          git push --force
          git push --tags
      
