name: build

on:
  workflow_call:
    inputs:
      build-configuration: 
        required: true
        type: string
      solution-path:
        required: true
        type: string
      build-path:
        required: true
        type: string

jobs: 
  build:
    strategy:
      matrix:
        os: [windows-latest]
        platform: ['x64', 'x86']

    runs-on: ${{ matrix.os }}

    env:
      DotnetVersion: 6.0.x

    steps:
      - uses: actions/checkout@v2
        name: Checkout repository
        
      - name: Set PR Version
        if: ${{ github.event_name == 'pull_request' }}
        shell: pwsh
        run: |
          $shortSHA = $env:GITHUB_SHA.SubString(0,7)
          $buildNumber = .\build\scripts\Set-Version.ps1 -AssemblyInfoPath .\src\Idler\Properties\AssemblyInfo.cs -VersionType AssemblyInformationalVersion -Suffix "+$shortSHA"

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DotnetVersion }}
      
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1
      
      - name: Restore
        run: msbuild $env:SolutionPath /t:Restore /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
        env:
          SolutionPath: ${{ inputs.solution-path }}
          Configuration: ${{ inputs.build-configuration }}
          TargetPlatform: ${{ matrix.platform }}

      - name: Build
        run: msbuild $env:SolutionPath /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
        env:
          SolutionPath: ${{ inputs.solution-path }}
          Configuration: ${{ inputs.build-configuration }}
          TargetPlatform: ${{ matrix.platform }}
      
      - name: Get current version and OS refix
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          $version = .\build\scripts\Get-Version.ps1 -AssemblyInfoPath .\src\Idler\Properties\AssemblyInfo.cs -VersionType AssemblyInformationalVersion
          "version=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          $os = [string]::Empty
          switch(${{ matrix.os }}) {
            "windows-latest" {
              $platform = "win"
            }
            default {
              Write-Host "Unknow os '${{ matrix.os }}'"
              $platform = "os"
            }
          }
          "os=$os" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          
      - name: Publish artifacts
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: '${{ env.os }}-${{ matrix.platform }}-${{ env.version }}'
          path: ${{ inputs.build-path }}\${{ matrix.platform }}\${{ inputs.build-configuration }}\*
